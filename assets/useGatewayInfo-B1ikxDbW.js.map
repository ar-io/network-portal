{"version":3,"file":"useGatewayInfo-B1ikxDbW.js","sources":["../../src/components/icons/gateway_hover.svg?react","../../src/components/icons/start_gateway_cubes.svg?react","../../src/components/modals/StartGatewayModal.tsx","../../src/hooks/useGatewayInfo.ts"],"sourcesContent":["import * as React from \"react\";\nconst SvgGatewayHover = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 12, viewBox: \"0 0 16 12\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"Group\" }, /* @__PURE__ */ React.createElement(\"path\", { id: \"Vector\", d: \"M1.77797 11.3339H3.55594C4.53383 11.3339 5.33391 10.5338 5.33391 9.55594V7.77797C5.33391 6.80009 4.53383 6 3.55594 6H1.77797C0.800087 6 0 6.80009 0 7.77797V9.55594C0 10.5338 0.800087 11.3339 1.77797 11.3339Z\", fill: \"url(#paint0_linear_1969_8278)\" }), /* @__PURE__ */ React.createElement(\"path\", { id: \"Vector_2\", d: \"M7.11196 5.99993H8.88993C9.86781 5.99993 10.6679 5.19984 10.6679 4.22196V2.44399C10.6679 1.4661 9.86781 0.666016 8.88993 0.666016H7.11196C6.13407 0.666016 5.33398 1.4661 5.33398 2.44399V4.22196C5.33398 5.19984 6.13407 5.99993 7.11196 5.99993Z\", fill: \"url(#paint1_linear_1969_8278)\" }), /* @__PURE__ */ React.createElement(\"path\", { id: \"Vector_3\", d: \"M14.2239 11.3339H12.4459C11.4681 11.3339 10.668 10.5338 10.668 9.55594V7.77797C10.668 6.80009 11.4681 6 12.4459 6H14.2239C15.2018 6 16.0019 6.80009 16.0019 7.77797V9.55594C16.0019 10.5338 15.2018 11.3339 14.2239 11.3339Z\", fill: \"url(#paint2_linear_1969_8278)\" }), /* @__PURE__ */ React.createElement(\"path\", { id: \"Vector_4\", d: \"M3.55273 6.0016C4.53062 6.0016 5.33071 5.20152 5.33071 4.22363C5.33071 5.20152 6.13079 6.0016 7.10868 6.0016C6.13079 6.0016 5.33071 6.80169 5.33071 7.77957C5.33071 6.80169 4.53062 6.0016 3.55273 6.0016Z\", fill: \"url(#paint3_linear_1969_8278)\" }), /* @__PURE__ */ React.createElement(\"path\", { id: \"Vector_5\", d: \"M8.8916 6.0016C9.86949 6.0016 10.6696 5.20152 10.6696 4.22363C10.6696 5.20152 11.4697 6.0016 12.4475 6.0016C11.4697 6.0016 10.6696 6.80169 10.6696 7.77957C10.6696 6.80169 9.86949 6.0016 8.8916 6.0016Z\", fill: \"url(#paint4_linear_1969_8278)\" })), /* @__PURE__ */ React.createElement(\"defs\", null, /* @__PURE__ */ React.createElement(\"linearGradient\", { id: \"paint0_linear_1969_8278\", x1: 0.421987, y1: 10.211, x2: 5.38672, y2: 10.0899, gradientUnits: \"userSpaceOnUse\" }, /* @__PURE__ */ React.createElement(\"stop\", { stopColor: \"#F7C3A1\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 0.52, stopColor: \"#EBAEC6\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 1, stopColor: \"#DF9BE8\" })), /* @__PURE__ */ React.createElement(\"linearGradient\", { id: \"paint1_linear_1969_8278\", x1: 5.75597, y1: 4.877, x2: 10.7207, y2: 4.75591, gradientUnits: \"userSpaceOnUse\" }, /* @__PURE__ */ React.createElement(\"stop\", { stopColor: \"#F7C3A1\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 0.52, stopColor: \"#EBAEC6\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 1, stopColor: \"#DF9BE8\" })), /* @__PURE__ */ React.createElement(\"linearGradient\", { id: \"paint2_linear_1969_8278\", x1: 11.09, y1: 10.211, x2: 16.0547, y2: 10.0899, gradientUnits: \"userSpaceOnUse\" }, /* @__PURE__ */ React.createElement(\"stop\", { stopColor: \"#F7C3A1\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 0.52, stopColor: \"#EBAEC6\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 1, stopColor: \"#DF9BE8\" })), /* @__PURE__ */ React.createElement(\"linearGradient\", { id: \"paint3_linear_1969_8278\", x1: 3.83406, y1: 7.03096, x2: 7.14388, y2: 6.95023, gradientUnits: \"userSpaceOnUse\" }, /* @__PURE__ */ React.createElement(\"stop\", { stopColor: \"#F7C3A1\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 0.52, stopColor: \"#EBAEC6\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 1, stopColor: \"#DF9BE8\" })), /* @__PURE__ */ React.createElement(\"linearGradient\", { id: \"paint4_linear_1969_8278\", x1: 9.17293, y1: 7.03096, x2: 12.4827, y2: 6.95023, gradientUnits: \"userSpaceOnUse\" }, /* @__PURE__ */ React.createElement(\"stop\", { stopColor: \"#F7C3A1\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 0.52, stopColor: \"#EBAEC6\" }), /* @__PURE__ */ React.createElement(\"stop\", { offset: 1, stopColor: \"#DF9BE8\" }))));\nexport default SvgGatewayHover;\n","import * as React from \"react\";\nconst SvgStartGatewayCubes = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 153, height: 117, viewBox: \"0 0 153 117\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"Frame 47535\" }, /* @__PURE__ */ React.createElement(\"g\", { id: \"Vector\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M80 36L116.5 57V99L80 78L80 36Z\", fill: \"#0C0C0D\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M116.22 57L152.72 36V78L116.22 99V57Z\", fill: \"#131314\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M116.5 15L153 36L116.5 57L80 36L116.5 15Z\", fill: \"#1D1D1F\" })), /* @__PURE__ */ React.createElement(\"g\", { id: \"Vector_2\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M49 72L75 87V117L49 102L49 72Z\", fill: \"#0C0C0D\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M74.8003 87L100.8 72V102L74.8003 117V87Z\", fill: \"#131314\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M75 57L101 72L75 87L49 72L75 57Z\", fill: \"#1D1D1F\" })), /* @__PURE__ */ React.createElement(\"g\", { id: \"Vector_3\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M125 90L139 98V114L125 106L125 90Z\", fill: \"#0C0C0D\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M138.892 98L152.892 90V106L138.892 114V98Z\", fill: \"#131314\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M139 82L153 90L139 98L125 90L139 82Z\", fill: \"#1D1D1F\" })), /* @__PURE__ */ React.createElement(\"g\", { id: \"Vector_4\" }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M1.25921e-06 -2.75L49.4999 25.5V82L0 53.75L1.25921e-06 -2.75Z\", fill: \"#0C0C0D\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M49.1198 25.5L98.6197 -2.75V53.75L49.1198 82V25.5Z\", fill: \"#131314\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M49.5001 -31L99 -2.75L49.4999 25.5L1.25921e-06 -2.75L49.5001 -31Z\", fill: \"#1D1D1F\" }))));\nexport default SvgStartGatewayCubes;\n","import { ARIOToken, mARIOToken } from '@ar.io/sdk/web';\nimport { WRITE_OPTIONS, log } from '@src/constants';\nimport useGatewayRegistrySettings from '@src/hooks/useGatewayRegistrySettings';\nimport { useGlobalState } from '@src/store';\nimport { showErrorToast } from '@src/utils/toast';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useEffect, useMemo, useState } from 'react';\nimport Button, { ButtonType } from '../Button';\nimport FormRow, { RowType } from '../forms/FormRow';\nimport { FormRowDef, isFormValid } from '../forms/formData';\nimport {\n  validateARIOAmount,\n  validateDomainName,\n  validateNumberRange,\n  validateString,\n  validateTransactionId,\n  validateWalletAddress,\n} from '../forms/validation';\nimport BaseModal from './BaseModal';\nimport BlockingMessageModal from './BlockingMessageModal';\nimport SuccessModal from './SuccessModal';\n\nconst DEFAULT_FORM_STATE = {\n  label: '',\n  address: '',\n  observerAddress: '',\n  propertiesId: 'FH1aVetOoulPGqgYukj0VE0wIhDy90WiQoV3U2PeY44',\n  stake: '',\n  allowDelegatedStaking: false,\n  delegatedStaking: '',\n  delegatedStakingShareRatio: '',\n  note: '',\n};\n\nconst DEFAULT_PROTOCOL = 'https' as const;\nconst DEFAULT_PORT = 443;\nconst DEFAULT_DELEGATED_STAKING_REWARD_SHARE_RATIO = 0;\nconst DEFAULT_DELEGATED_STAKING = 500;\n\nconst StartGatewayModal = ({ onClose }: { onClose: () => void }) => {\n  const queryClient = useQueryClient();\n\n  const walletAddress = useGlobalState((state) => state.walletAddress);\n  const arioWriteableSDK = useGlobalState((state) => state.arIOWriteableSDK);\n  const ticker = useGlobalState((state) => state.ticker);\n\n  const { data: gatewayRegistrySettings } = useGatewayRegistrySettings();\n\n  const [formState, setFormState] =\n    useState<Record<string, string | boolean>>(DEFAULT_FORM_STATE);\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n\n  const [showBlockingMessageModal, setShowBlockingMessageModal] =\n    useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n\n  useEffect(() => {\n    setFormState((currentState) => {\n      return {\n        ...currentState,\n        observerAddress: walletAddress?.toString() ?? '',\n      };\n    });\n  }, [walletAddress]);\n\n  const allowDelegatedStaking = formState.allowDelegatedStaking as boolean;\n\n  const formRowDefs: FormRowDef[] = useMemo(() => {\n    const minOperatorStake = gatewayRegistrySettings\n      ? new mARIOToken(gatewayRegistrySettings.operators.minStake)\n          .toARIO()\n          .valueOf()\n      : 10000;\n\n    return [\n      {\n        formPropertyName: 'label',\n        label: '*Label:',\n        rowType: RowType.TOP,\n        validateProperty: validateString('Label', 1, 64),\n      },\n      {\n        formPropertyName: 'address',\n        label: '*Address:',\n        leftComponent: <div className=\"pl-6 text-xs text-low\">https://</div>,\n        rightComponent: (\n          <div className=\"hidden pr-6 text-xs text-low lg:block\">:443</div>\n        ),\n\n        validateProperty: validateDomainName('Address'),\n      },\n      {\n        formPropertyName: 'observerAddress',\n        label: '*Observer Wallet:',\n        validateProperty: validateWalletAddress('Observer Wallet'),\n      },\n      {\n        formPropertyName: 'propertiesId',\n        label: '*Properties ID:',\n        placeholder: DEFAULT_FORM_STATE.propertiesId,\n        validateProperty: validateTransactionId('Properties ID'),\n      },\n      {\n        formPropertyName: 'stake',\n        label: `*Stake (${ticker}):`,\n        placeholder: `Minimum ${minOperatorStake} ${ticker}`,\n        validateProperty: validateARIOAmount('Stake', ticker, minOperatorStake),\n      },\n      {\n        formPropertyName: 'allowDelegatedStaking',\n        label: 'Delegated Staking:',\n      },\n      {\n        formPropertyName: 'minDelegatedStake',\n        label: `Minimum Delegated Stake (${ticker}):`,\n        enabled: allowDelegatedStaking,\n        placeholder: allowDelegatedStaking\n          ? `Minimum 10 ${ticker}`\n          : 'Enable Delegated Staking to set this value.',\n        validateProperty: validateARIOAmount(\n          'Minimum Delegated Stake',\n          ticker,\n          gatewayRegistrySettings\n            ? new mARIOToken(gatewayRegistrySettings.delegates.minStake)\n                .toARIO()\n                .valueOf()\n            : 10,\n        ),\n      },\n      {\n        formPropertyName: 'delegatedStakingShareRatio',\n        label: 'Reward Share Ratio:',\n        enabled: allowDelegatedStaking,\n        placeholder: allowDelegatedStaking\n          ? 'Enter value 0-95'\n          : 'Enable Delegated Staking to set this value.',\n        validateProperty: validateNumberRange(\n          'Reward Share Ratio',\n          0,\n          gatewayRegistrySettings?.operators.maxDelegateRewardSharePct ?? 95,\n        ),\n      },\n      {\n        formPropertyName: 'note',\n        label: '*Note:',\n        rowType: RowType.BOTTOM,\n        validateProperty: validateString('Note', 1, 256),\n      },\n    ];\n  }, [allowDelegatedStaking, gatewayRegistrySettings, ticker]);\n\n  const submitForm = async () => {\n    const formValid = isFormValid({ formRowDefs, formValues: formState });\n\n    if (formValid && arioWriteableSDK) {\n      try {\n        const allowDelegatedStaking =\n          formState.allowDelegatedStaking as boolean;\n        setShowBlockingMessageModal(true);\n        const joinNetworkParams = {\n          // GatewayConnectionSettings\n          protocol: DEFAULT_PROTOCOL,\n          fqdn: String(formState.address),\n          port: DEFAULT_PORT,\n\n          // GatewayMetadata\n          note: String(formState.note),\n          label: String(formState.label),\n          properties: String(formState.propertiesId),\n          observerAddress: String(formState.observerAddress),\n\n          // GatewayStakingSettings\n          allowDelegatedStaking,\n          delegateRewardShareRatio: allowDelegatedStaking\n            ? parseFloat(String(formState.delegatedStakingShareRatio))\n            : DEFAULT_DELEGATED_STAKING_REWARD_SHARE_RATIO,\n          minDelegatedStake: new ARIOToken(\n            allowDelegatedStaking\n              ? parseFloat(String(formState.minDelegatedStake))\n              : DEFAULT_DELEGATED_STAKING,\n          )\n            .toMARIO()\n            .valueOf(),\n          autoStake: true,\n          operatorStake: new ARIOToken(parseFloat(String(formState.stake)))\n            .toMARIO()\n            .valueOf(),\n        };\n\n        // UNCOMMENT AND COMMENT OUT JOIN NETWORK FOR DEV WORK\n        // await delay(5000);\n        const { id: txID } = await arioWriteableSDK.joinNetwork(\n          joinNetworkParams,\n          WRITE_OPTIONS,\n        );\n\n        log.info(`Join Network txID: ${txID}`);\n\n        queryClient.invalidateQueries({\n          queryKey: ['gateway', walletAddress?.toString()],\n          refetchType: 'all',\n        });\n        queryClient.invalidateQueries({\n          queryKey: ['gateways'],\n          refetchType: 'all',\n        });\n\n        setShowSuccessModal(true);\n      } catch (e: any) {\n        showErrorToast(`${e}`);\n      } finally {\n        setShowBlockingMessageModal(false);\n      }\n    }\n  };\n\n  const resetForm = () => {\n    setFormState({\n      ...DEFAULT_FORM_STATE,\n      observerAddress: walletAddress?.toString() ?? '',\n    });\n    setFormErrors({});\n  };\n\n  const closeDialog = () => {\n    resetForm();\n    onClose();\n  };\n\n  return (\n    <BaseModal onClose={closeDialog}>\n      <div className=\"w-[calc(100vw-2rem)] text-left lg:w-[42.5rem]\">\n        <div className=\"pb-3 text-2xl text-high\">Start Gateway</div>\n        <div className=\"flex flex-col gap-2 text-sm text-low lg:flex-row\">\n          Owner ID:&nbsp;\n          <span className=\"text-link\">{walletAddress?.toString()}</span>\n        </div>\n\n        <div className=\"mt-8 grid grid-cols-[14.375rem_auto] overflow-hidden rounded-md outline outline-grey-500\">\n          {formRowDefs.map((rowDef, index) => {\n            return (\n              <FormRow\n                key={index}\n                formState={formState}\n                setFormState={setFormState}\n                errorMessages={formErrors}\n                setErrorMessages={setFormErrors}\n                showModified={false}\n                initialState={\n                  rowDef.formPropertyName === 'propertiesId' ||\n                  rowDef.formPropertyName === 'observerAddress'\n                    ? {\n                        ...DEFAULT_FORM_STATE,\n                        observerAddress: walletAddress?.toString() ?? '',\n                      }\n                    : undefined\n                }\n                {...rowDef}\n              />\n            );\n          })}\n        </div>\n        <div className=\"mt-8 flex w-full grow justify-end gap-[.6875rem]\">\n          <Button\n            className=\"w-[6.25rem]\"\n            onClick={closeDialog}\n            active={true}\n            title=\"Cancel\"\n            text=\"Cancel\"\n          />\n          <div\n            className={\n              isFormValid({ formRowDefs, formValues: formState })\n                ? undefined\n                : 'pointer-events-none opacity-30'\n            }\n          >\n            <Button\n              className=\"w-[6.25rem]\"\n              onClick={() => {\n                submitForm();\n              }}\n              title=\"Confirm\"\n              text=\"Confirm\"\n              buttonType={ButtonType.PRIMARY}\n            />\n          </div>\n        </div>\n        {showBlockingMessageModal && (\n          <BlockingMessageModal\n            onClose={() => setShowBlockingMessageModal(false)}\n            message=\"Sign the following data with your wallet to proceed.\"\n          ></BlockingMessageModal>\n        )}\n        {showSuccessModal && (\n          <SuccessModal\n            onClose={() => {\n              resetForm();\n              setShowSuccessModal(false);\n              onClose();\n            }}\n            title=\"Congratulations\"\n            bodyText=\"You have successfully joined the network.\"\n          />\n        )}\n      </div>\n    </BaseModal>\n  );\n};\n\nexport default StartGatewayModal;\n","import { mARIOToken } from '@ar.io/sdk/web';\nimport { useGlobalState } from '@src/store';\nimport {\n  formatDateTime,\n  formatWalletAddress,\n  formatWithCommas,\n} from '@src/utils';\nimport useGateway from './useGateway';\n\nexport enum GatewayStatus {\n  LOADING,\n  FOUND,\n  NOT_FOUND,\n}\n\nexport const useGatewayInfo = () => {\n  const walletAddress = useGlobalState((state) => state.walletAddress);\n  const ticker = useGlobalState((state) => state.ticker);\n  const { isLoading, data: gateway } = useGateway({\n    ownerWalletAddress: walletAddress?.toString(),\n  });\n\n  let gatewayInfo: Array<[string, string | number]>;\n\n  if (gateway) {\n    gatewayInfo = [\n      ['Label', gateway.settings.label],\n      [\n        'Address',\n        `${gateway.settings.protocol}://${gateway.settings.fqdn}:${gateway.settings.port}`,\n      ],\n      ['Observer Wallet', formatWalletAddress(gateway.observerAddress)],\n      ['Joined at', formatDateTime(new Date(gateway.startTimestamp))],\n      [\n        `Stake (${ticker})`,\n        formatWithCommas(\n          new mARIOToken(gateway.operatorStake).toARIO().valueOf(),\n        ),\n      ],\n      ['Status', gateway.status],\n      ['Reward Ratio', gateway.settings.delegateRewardShareRatio],\n    ];\n  } else {\n    gatewayInfo = [];\n  }\n\n  const gatewayStatus = gateway\n    ? GatewayStatus.FOUND\n    : isLoading\n      ? GatewayStatus.LOADING\n      : GatewayStatus.NOT_FOUND;\n\n  return { gatewayInfo, gateway, gatewayStatus };\n};\n"],"names":["SvgGatewayHover","props","reactExports","SvgStartGatewayCubes","DEFAULT_FORM_STATE","DEFAULT_PROTOCOL","DEFAULT_PORT","DEFAULT_DELEGATED_STAKING_REWARD_SHARE_RATIO","DEFAULT_DELEGATED_STAKING","StartGatewayModal","onClose","queryClient","useQueryClient","walletAddress","useGlobalState","state","arioWriteableSDK","ticker","gatewayRegistrySettings","useGatewayRegistrySettings","formState","setFormState","formErrors","setFormErrors","showBlockingMessageModal","setShowBlockingMessageModal","showSuccessModal","setShowSuccessModal","currentState","allowDelegatedStaking","formRowDefs","minOperatorStake","RP","RowType","validateString","jsxRuntimeExports","validateDomainName","validateWalletAddress","validateTransactionId","validateARIOAmount","validateNumberRange","submitForm","isFormValid","allowDelegatedStaking2","joinNetworkParams","AP","txID","WRITE_OPTIONS","log","e","showErrorToast","resetForm","closeDialog","BaseModal","rowDef","index","FormRow","Button","ButtonType","BlockingMessageModal","SuccessModal","GatewayStatus","GatewayStatus2","useGatewayInfo","isLoading","gateway","useGateway","gatewayInfo","formatWalletAddress","formatDateTime","formatWithCommas"],"mappings":"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"}