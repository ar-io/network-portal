{"version":3,"file":"index-B8YyJEAo.js","sources":["../../src/pages/Report/GatewayAssessmentsTable.tsx","../../src/pages/Report/ReportHeader.tsx","../../src/pages/Report/index.tsx"],"sourcesContent":["import { AoGatewayWithAddress } from '@ar.io/sdk/web';\nimport AddressCell from '@src/components/AddressCell';\nimport AssessmentDetailsPanel from '@src/components/AssessmentDetailsPanel';\nimport Bubble from '@src/components/Bubble';\nimport ColumnSelector from '@src/components/ColumnSelector';\nimport TableView from '@src/components/TableView';\nimport { Assessment, ReportData } from '@src/types';\nimport { ColumnDef, createColumnHelper } from '@tanstack/react-table';\nimport { useEffect, useState } from 'react';\n\ninterface TableData {\n  observedHost: string;\n  expectedOwner: string;\n  observedOwner?: string;\n  ownershipResult: boolean;\n\n  arnsResult: boolean;\n\n  overallResult: boolean;\n  assessment: Assessment;\n}\n\nconst columnHelper = createColumnHelper<TableData>();\n\nconst GatewayAssessmentsTable = ({\n  gateway,\n  reportData,\n}: {\n  gateway?: AoGatewayWithAddress | null;\n  reportData: ReportData;\n}) => {\n  const [tableData, setTableData] = useState<Array<TableData>>([]);\n\n  const [observedHost, setObservedHost] = useState<string>();\n  const [selectedAssessment, setSelectedAssessment] = useState<Assessment>();\n\n  useEffect(() => {\n    const tableData: Array<TableData> = Object.entries(\n      reportData.gatewayAssessments,\n    ).map(([observedHost, assessment]) => {\n      return {\n        observedHost: observedHost,\n        expectedOwner: assessment.ownershipAssessment.expectedWallets.join(),\n        observedOwner: assessment.ownershipAssessment.observedWallet,\n        ownershipResult: assessment.ownershipAssessment.pass,\n        arnsResult: assessment.arnsAssessments.pass,\n        overallResult: assessment.pass,\n        assessment: assessment,\n      };\n    });\n    setTableData(tableData);\n  }, [reportData]);\n\n  // Define columns for the table\n  const columns: ColumnDef<TableData, any>[] = [\n    columnHelper.accessor('observedHost', {\n      id: 'observedHost',\n      header: 'Observed Host',\n      sortDescFirst: false,\n    }),\n    columnHelper.accessor('expectedOwner', {\n      id: 'expectedOwner',\n      header: 'Expected Owner',\n      sortDescFirst: false,\n      cell: ({ row }) => {\n        const expectedWallet = row.original.expectedOwner;\n        return expectedWallet ? <AddressCell address={expectedWallet} /> : '';\n      },\n    }),\n    columnHelper.accessor('observedOwner', {\n      id: 'observedOwner',\n      header: 'Observed Owner',\n      sortDescFirst: false,\n      cell: ({ row }) => {\n        const observedWallet = row.original.observedOwner;\n        return observedWallet ? <AddressCell address={observedWallet} /> : '';\n      },\n    }),\n    columnHelper.accessor('ownershipResult', {\n      id: 'ownershipResult',\n      header: 'Ownership Result',\n      sortDescFirst: false,\n      cell: ({ row }) => <Bubble value={row.original.ownershipResult} />,\n    }),\n    columnHelper.accessor('arnsResult', {\n      id: 'arnsResult',\n      header: 'ArNS Result',\n      sortDescFirst: false,\n      cell: ({ row }) => <Bubble value={row.original.arnsResult} />,\n    }),\n    columnHelper.accessor('overallResult', {\n      id: 'overallResult',\n      header: 'Overall Result',\n      sortDescFirst: false,\n      cell: ({ row }) => (\n        <div className=\"pr-6\">\n          <Bubble value={row.original.overallResult} />\n        </div>\n      ),\n    }),\n  ];\n\n  return (\n    <div className=\"mb-6\">\n      <div className=\"flex w-full items-center rounded-t-xl border border-grey-600 bg-containerL3 py-[0.9375rem] pl-6 pr-[0.8125rem]\">\n        <div className=\"grow text-sm text-mid\">Reports</div>\n        <ColumnSelector tableId=\"gateway-assessments\" columns={columns} />\n      </div>\n      <TableView\n        columns={columns}\n        data={tableData || []}\n        isLoading={false}\n        noDataFoundText=\"No reports found.\"\n        defaultSortingState={{ id: 'observedHost', desc: false }}\n        onRowClick={(row) => {\n          setObservedHost(row.observedHost);\n          setSelectedAssessment(row.assessment);\n        }}\n        tableId=\"gateway-assessments\"\n      />\n      {selectedAssessment && gateway && (\n        <AssessmentDetailsPanel\n          observedHost={observedHost}\n          assessment={selectedAssessment}\n          onClose={() => setSelectedAssessment(undefined)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GatewayAssessmentsTable;\n","import { AoGateway } from '@ar.io/sdk/web';\nimport Button from '@src/components/Button';\nimport Placeholder from '@src/components/Placeholder';\nimport Profile from '@src/components/Profile';\nimport { downloadReport } from '@src/hooks/useReport';\nimport { ReportData } from '@src/types';\nimport { formatDateTime } from '@src/utils';\nimport { saveAs } from 'file-saver';\nimport { ChevronRightIcon, Download, NotebookText } from 'lucide-react';\nimport { Link, useParams } from 'react-router-dom';\n\nconst ReportHeader = ({\n  gateway,\n  reportData,\n}: {\n  gateway?: AoGateway | null;\n  reportData?: ReportData;\n}) => {\n  const params = useParams();\n\n  const ownerId = params?.ownerId;\n  const reportId = params?.reportId;\n\n  return (\n    <header className=\"flex-col text-clip rounded-xl leading-[1.4] lg:mt-6 lg:border dark:border-transparent-100-8 dark:bg-grey-1000 dark:text-grey-300\">\n      <div className=\"flex items-center gap-3 py-5 pl-6 pr-4 text-sm\">\n        <div className=\"hidden items-center gap-3 lg:flex\">\n          <div className=\"text-mid\">\n            <Link to={'/gateways'}>Gateways</Link>\n          </div>\n          <ChevronRightIcon className=\"size-4 text-mid\" strokeWidth={1.5} />\n          {gateway ? (\n            <Link className=\"text-mid\" to={`/gateways/${ownerId}`}>\n              {gateway.settings.label}\n            </Link>\n          ) : (\n            <Placeholder />\n          )}\n          <ChevronRightIcon className=\"size-4 text-mid\" strokeWidth={1.5} />\n          <Link className=\"text-mid\" to={`/gateways/${ownerId}/reports`}>\n            Reports\n          </Link>\n          <ChevronRightIcon className=\"size-4 text-mid\" strokeWidth={1.5} />\n          {reportId ? <div>{reportId}</div> : <Placeholder />}\n        </div>\n        <div className=\"grow\" />\n        <div className=\"items-center\">\n          <Profile />\n        </div>\n      </div>\n      <div className=\"relative flex items-center gap-3 rounded-t-xl border border-grey-500 bg-grey-900 px-6 py-4 lg:rounded-t-none\">\n        <NotebookText className=\"size-4 shrink-0 text-mid\" strokeWidth={1.5} />\n        {reportId ? (\n          <div className=\"break-all text-high\">{reportId}</div>\n        ) : (\n          <Placeholder />\n        )}\n        <div className=\"grow\" />\n        {reportData && reportId && (\n          <Button\n            // className=\"absolute right-6\"\n            title={'Download Report'}\n            icon={<Download className=\"size-4\" strokeWidth={2} />}\n            active={true}\n            onClick={async () => {\n              if (reportId && reportData) {\n                const reportData = await downloadReport(reportId);\n                const blob = new Blob([reportData], {\n                  type: 'application/json',\n                });\n                saveAs(blob, `report-${reportId}.json`);\n              }\n            }}\n          />\n        )}\n      </div>\n      <div className=\"grid grid-cols-[120px_auto] items-center gap-3 rounded-b-xl border border-grey-500 bg-grey-900 py-5 pl-6 text-sm lg:grid-cols-[180px_auto]\">\n        {/* <div>Observer Host:</div>\n        <div></div> */}\n        <div>Reports Source:</div>\n        {reportData ? <div>Arweave Tx</div> : <Placeholder />}\n        <div>Observer Address:</div>\n        {reportData ? <div>{reportData.observerAddress}</div> : <Placeholder />}\n        <div>Epoch Number:</div>\n        {reportData ? <div>{reportData.epochIndex}</div> : <Placeholder />}\n        <div>Generated At:</div>\n        {reportData ? (\n          <div>{formatDateTime(new Date(reportData.epochStartTimestamp))}</div>\n        ) : (\n          <Placeholder />\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default ReportHeader;\n","import useGateway from '@src/hooks/useGateway';\nimport useReport from '@src/hooks/useReport';\nimport { useParams } from 'react-router-dom';\nimport GatewayAssessmentsTable from './GatewayAssessmentsTable';\nimport ReportHeader from './ReportHeader';\n\nconst Report = () => {\n  const params = useParams();\n  const ownerId = params?.ownerId;\n  const reportId = params?.reportId;\n\n  const { data: gateway } = useGateway({\n    ownerWalletAddress: ownerId,\n  });\n\n  const { isLoading, data: reportData } = useReport(reportId);\n\n  return (\n    <div className=\"flex h-full max-w-full flex-col gap-6\">\n      <ReportHeader gateway={gateway} reportData={reportData} />\n      <div className=\"flex-1 overflow-hidden\">\n        {isLoading || !reportData ? undefined : reportData ? (\n          <div className=\"h-full overflow-y-auto scrollbar\">\n            <GatewayAssessmentsTable\n              gateway={gateway}\n              reportData={reportData}\n            />\n          </div>\n        ) : (\n          <div>Unable to find report with ID {reportId}.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Report;\n"],"names":["columnHelper","createColumnHelper","GatewayAssessmentsTable","gateway","reportData","tableData","setTableData","reactExports","observedHost","setObservedHost","selectedAssessment","setSelectedAssessment","tableData2","observedHost2","assessment","columns","row","expectedWallet","jsxRuntimeExports","AddressCell","observedWallet","Bubble","ColumnSelector","TableView","AssessmentDetailsPanel","ReportHeader","params","useParams","ownerId","reportId","Link","ChevronRight","Placeholder","Profile","NotebookText","Button","Download","reportData2","downloadReport","blob","FileSaver_minExports","formatDateTime","Report","useGateway","isLoading","useReport"],"mappings":"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"}