{
    "root": true, // Make sure eslint picks up the config at the root of the directory
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 12, // Use the latest ecmascript standard
      "sourceType": "module", // Allows using import/export statements
      "ecmaFeatures": {
        "-": true, // Enable JSX since we"re using React
      },
    },
    "settings": {
      "react": {
        "version": "detect", // Automatically detect the react version
      },
    },
    "env": {
      "browser": true, // Enables browser globals like window and document
      "amd": true, // Enables require() and define() as global variables as per the amd spec.
      "node": true, // Enables Node.js global variables and Node.js scoping.
    },
    "extends": [
      "eslint:recommended",
      "plugin:jest-formatting/recommended",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:react/recommended",
      "plugin:react-hooks/recommended",
      "plugin:jsx-a11y/recommended",
      "plugin:tailwindcss/recommended",
      //"plugin:prettier/recommended" // Make this the last element so prettier config overrides other formatting rules
    ],
    "plugins": [
      "jest-formatting",
      "simple-import-sort",
      "import",
      "react-hooks",
      "jsx-no-inline-style",
    ],
    "rules": {
      //  "prettier/prettier": ["error", {}, { "usePrettierrc": true }], // Use our .prettierrc file as source - disabled because conflict no-inline-style
      "react/react-in-jsx-scope": "off",
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": ["error"],
      "jsx-no-inline-style/no-inline-style": "error",
      "@typescript-eslint/no-explicit-any": "off",
    },
  }
  